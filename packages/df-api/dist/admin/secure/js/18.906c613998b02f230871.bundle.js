(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{603:function(t,e,n){"use strict";n.r(e);var o=n(6),c=(n(23),n(222),n(221));function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}class a extends c.a{constructor(t,...e){super(function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){Object(o.a)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},t,{defaultValue:"defaultValue"in t?t.defaultValue:null}),...e),Object(o.a)(this,"getFilterGraphQL",({value:{inverted:t,options:e}})=>{const n=e.length>1;let o=this.path;n&&t?o="".concat(this.path,"_not_in"):n?o="".concat(this.path,"_in"):t&&(o="".concat(this.path,"_not"));const c=n?e.map(t=>t.value).join(","):e[0].value;return"".concat(o,": ").concat(c)}),Object(o.a)(this,"getFilterLabel",()=>this.label),Object(o.a)(this,"formatFilter",({value:t})=>{if(!t.options.length)return t.inverted?"".concat(this.label," is set"):"".concat(this.label," has no value");if(t.options.length>1){const e=t.options.map(t=>t.label).join(", ");return t.inverted?"".concat(this.label," is not in [").concat(e,"]"):"".concat(this.label," is in [").concat(e,"]")}const e=t.options[0].label;return t.inverted?"".concat(this.label," is not ").concat(e):"".concat(this.label," is ").concat(e)}),Object(o.a)(this,"getFilterTypes",()=>[{type:"is",label:"Matches",getInitialValue:()=>({inverted:!1,options:[]})}]),this.options=this.config.options}}e.default=a}}]);