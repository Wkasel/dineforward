(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{607(t,e,n){n.r(e);const a=n(6); const c=(n(23),n(222),n(221));function i(t,e){const n=Object.keys(t);if(Object.getOwnPropertySymbols){let a=Object.getOwnPropertySymbols(t);e&&(a=a.filter(((e) => {return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}class r extends c.a{constructor(t,...e){super(function(t){for(let e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?i(Object(n),!0).forEach(((e) => {Object(a.a)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach(((e) => {Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},t,{defaultValue:"defaultValue"in t?t.defaultValue:t.many?[]:null}),...e),Object(a.a)(this,"getQueryFragment",(t=this.path)=>"\n      ".concat(t," {\n        id\n        _label_\n      }\n    ")),Object(a.a)(this,"getFilterGraphQL",({type:t,value:e})=>t==="contains"?"".concat(this.path,'_some: {id: "').concat(e,'"}'):t==="is"?"".concat(this.path,': {id: "').concat(e,'"}'):void 0),Object(a.a)(this,"getFilterLabel",({label:t})=>"".concat(this.label," ").concat(t.toLowerCase())),Object(a.a)(this,"formatFilter",({label:t,value:e})=>"".concat(this.getFilterLabel({label:t}),': "').concat(e,'"')),Object(a.a)(this,"serialize",t=>{const{path:e}=this; const {many:n}=this.config;const a=t[e];if(n){let t=[];return Array.isArray(a)&&(t=a.map(t=>t.id)),{disconnectAll:!0,connect:t.map(t=>({id:t}))}}return a?{connect:{id:a.id}}:{disconnectAll:!0}}),Object(a.a)(this,"getFilterTypes",()=>{const{many:t}=this.config;return t?[{type:"contains",label:"Contains",getInitialValue:()=>null}]:[{type:"is",label:"Is",getInitialValue:()=>null}]})}

getRefList(){const{getListByKey:t}=this.adminMeta; const {ref:e}=this.config;return t(e)}}e.default=r}}]);